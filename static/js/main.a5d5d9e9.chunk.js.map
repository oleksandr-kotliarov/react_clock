{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","currentTime","Date","timerId","this","window","setInterval","setState","console","log","toLocaleTimeString","prevProps","prevName","name","newName","props","clearInterval","className","Component","getRandomName","value","Math","random","toString","slice","App","clockName","hasClock","setTimer","handleClickEvent","handleContextEvent","document","addEventListener","ReactDOM","render","getElementById"],"mappings":"6MAUaA,EAAb,4MACEC,MAAyB,CACvBC,YAAa,IAAIC,MAFrB,EAKEC,QAAU,EALZ,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEN,YAAa,IAAIC,OAGjCM,QAAQC,IAAI,EAAKT,MAAMC,YAAYS,wBAClC,OAbP,gCAgBE,SAAmBC,GACjB,IAAMC,EAAWD,EAAUE,KACrBC,EAAUV,KAAKW,MAAMF,KAEvBD,IAAaE,GAEfN,QAAQC,IAAR,uBAA4BG,EAA5B,eAA2CE,MAtBjD,kCA0BE,WACET,OAAOW,cAAcZ,KAAKD,WA3B9B,oBA8BE,WACE,IAAQF,EAAgBG,KAAKJ,MAArBC,YAER,OACE,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKW,MAAMF,OAFhB,UAOE,sBAAMI,UAAU,cAAhB,SACGhB,EAAYS,8BA1CvB,GAA2BQ,aCN3B,SAASC,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEzB,MAAyB,CACvB0B,UAAWP,IACXQ,UAAU,GAHd,EAMExB,QAAU,EANZ,EAeEyB,SAAW,WACT,OAAOvB,OAAOC,aAAY,WACxB,EAAKC,SAAS,CAAEmB,UAAWP,QAC1B,OAlBP,EAqBEU,iBAAmB,WACjB,EAAKtB,SAAS,CAAEoB,UAAU,KAtB9B,EAyBEG,mBAAqB,WACnB,EAAKvB,SAAS,CAAEoB,UAAU,KA1B9B,uDAQE,WACEvB,KAAKD,QAAUC,KAAKwB,WAEpBG,SAASC,iBAAiB,cAAe5B,KAAK0B,oBAC9CC,SAASC,iBAAiB,QAAS5B,KAAKyB,oBAZ5C,oBA6BE,WACE,MAAgCzB,KAAKJ,MAA7B0B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,SAEnB,OACE,sBAAKV,UAAU,MAAf,UACE,6CACCU,GAAY,cAAC,EAAD,CAAOd,KAAMa,WAnClC,GAAyBR,aCZzBe,IAASC,OACP,cAAC,EAAD,IACAH,SAASI,eAAe,W","file":"static/js/main.a5d5d9e9.chunk.js","sourcesContent":["import { Component } from 'react';\n\ninterface State {\n  currentTime: Date;\n}\n\ninterface Props {\n  name: string;\n}\n\nexport class Clock extends Component<Props, State> {\n  state: Readonly<State> = {\n    currentTime: new Date(),\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ currentTime: new Date() });\n\n      // eslint-disable-next-line\n      console.log(this.state.currentTime.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const prevName = prevProps.name;\n    const newName = this.props.name;\n\n    if (prevName !== newName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${prevName} to ${newName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    window.clearInterval(this.timerId);\n  }\n\n  render() {\n    const { currentTime } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        time is\n\n        <span className=\"Clock__time\">\n          {currentTime.toLocaleTimeString()}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\ninterface State {\n  clockName: string;\n  hasClock: boolean;\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    clockName: getRandomName(),\n    hasClock: true,\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = this.setTimer();\n\n    document.addEventListener('contextmenu', this.handleContextEvent);\n    document.addEventListener('click', this.handleClickEvent);\n  }\n\n  setTimer = () => {\n    return window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  };\n\n  handleClickEvent = () => {\n    this.setState({ hasClock: true });\n  };\n\n  handleContextEvent = () => {\n    this.setState({ hasClock: false });\n  };\n\n  render() {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}